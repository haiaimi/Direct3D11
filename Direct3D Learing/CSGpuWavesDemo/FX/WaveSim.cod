//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbUpdateSettings
{
    float   gWaveConstants[3];          // Offset:    0, size:   36
}

cbuffer cbDisturbSettings
{
    float   gDisturbMag;                // Offset:    0, size:    4
    int2    gDisturbIndex;              // Offset:    4, size:    8
}

//
// 5 local object(s)
//
SamplerState samPoint
{
    Filter   = uint(MIN_MAG_MIP_POINT /* 0 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
Texture2D gPrevSolInput;
Texture2D gCurrSolInput;
RWTexture2D gCurrSolOutput;
RWTexture2D gNextSolOutput;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 2 technique(s)
    //
    technique11 UpdateWaves
    {
        pass P0
        {
            VertexShader = NULL;
            PixelShader = NULL;
            ComputeShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbUpdateSettings
                // {
                //
                //   float gWaveConstants[3];           // Offset:    0 Size:    36
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // gPrevSolInput                     texture  float4          2d             t0      1 
                // gCurrSolInput                     texture  float4          2d             t1      1 
                // gNextSolOutput                        UAV   float          2d             u0      1 
                // cbUpdateSettings                  cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // no Input
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // no Output
                cs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[3], immediateIndexed
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_uav_typed_texture2d (float,float,float,float) u0
                dcl_input vThreadID.xy
                dcl_temps 3
                dcl_thread_group 16, 16, 1
                //
                // Initial variable locations:
                //   vThreadID.x <- dispatchThreadID.x; vThreadID.y <- dispatchThreadID.y; vThreadID.z <- dispatchThreadID.z
                //
                #line 44 "D:\vs项目\Introduction-to-3D-Game-Programming-With-DirectX11-master\SelectedCodeSolutions\CSGpuWavesDemo\FX\WaveSim.fx"
                mov r0.x, vThreadID.x  // r0.x <- x
                
                #line 45
                mov r0.w, vThreadID.y  // r0.w <- y
                
                #line 47
                mov r0.yzw, r0.wwww
                mov r1.x, r0.x
                mov r1.y, r0.y
                mov r1.zw, l(0,0,0,0)
                ld_indexable(texture2d)(float,float,float,float) r1.x, r1.xyzw, t0.xyzw
                mul r1.x, r1.x, cb0[0].x
                mov r2.x, r0.x
                mov r2.y, r0.y
                mov r2.zw, l(0,0,0,0)
                ld_indexable(texture2d)(float,float,float,float) r1.y, r2.xyzw, t1.yxzw
                mul r1.y, r1.y, cb0[1].x
                add r1.x, r1.y, r1.x
                iadd r2.y, r0.y, l(1)
                mov r2.x, r0.x
                mov r2.zw, l(0,0,0,0)
                ld_indexable(texture2d)(float,float,float,float) r1.y, r2.xyzw, t1.yxzw
                ineg r1.z, l(1)
                iadd r2.y, r0.y, r1.z
                mov r2.x, r0.x
                mov r2.zw, l(0,0,0,0)
                ld_indexable(texture2d)(float,float,float,float) r1.z, r2.xyzw, t1.yzxw
                add r1.y, r1.z, r1.y
                iadd r2.x, r0.x, l(1)
                mov r2.y, r0.y
                mov r2.zw, l(0,0,0,0)
                ld_indexable(texture2d)(float,float,float,float) r1.z, r2.xyzw, t1.yzxw
                add r1.y, r1.z, r1.y
                ineg r1.z, l(1)
                iadd r2.x, r0.x, r1.z
                mov r2.y, r0.y
                mov r2.zw, l(0,0,0,0)
                ld_indexable(texture2d)(float,float,float,float) r1.z, r2.xyzw, t1.yzxw
                add r1.y, r1.z, r1.y
                mul r1.y, r1.y, cb0[2].x
                add r1.x, r1.y, r1.x
                store_uav_typed u0.xyzw, r0.xyzw, r1.xxxx
                
                #line 75
                ret 
                // Approximately 39 instruction slots used
                            
            };
        }

    }

    technique11 DisturbWaves
    {
        pass P0
        {
            VertexShader = NULL;
            PixelShader = NULL;
            ComputeShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbDisturbSettings
                // {
                //
                //   float gDisturbMag;                 // Offset:    0 Size:     4
                //   int2 gDisturbIndex;                // Offset:    4 Size:     8
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // gCurrSolOutput                        UAV   float          2d             u0      1 
                // cbDisturbSettings                 cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // no Input
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // no Output
                cs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[1], immediateIndexed
                dcl_uav_typed_texture2d (float,float,float,float) u0
                dcl_temps 5
                dcl_thread_group 1, 1, 1
                //
                // Initial variable locations:
                //   vThreadIDInGroup.x <- groupThreadID.x; vThreadIDInGroup.y <- groupThreadID.y; vThreadIDInGroup.z <- groupThreadID.z; 
                //   vThreadID.x <- dispatchThreadID.x; vThreadID.y <- dispatchThreadID.y; vThreadID.z <- dispatchThreadID.z
                //
                #line 96 "D:\vs项目\Introduction-to-3D-Game-Programming-With-DirectX11-master\SelectedCodeSolutions\CSGpuWavesDemo\FX\WaveSim.fx"
                mov r0.x, cb0[0].y  // r0.x <- x
                
                #line 97
                mov r1.yzw, cb0[0].zzzz  // r1.w <- y
                
                #line 99
                mul r2.x, cb0[0].x, l(0.500000)  // r2.x <- halfMag
                
                #line 102
                mov r0.yzw, r1.wwww
                mov r3.x, r0.x
                mov r3.yzw, r0.wwww
                ld_uav_typed_indexable(texture2d)(float,float,float,float) r2.y, r3.xyzw, u0.yxzw
                add r2.y, r2.y, cb0[0].x
                store_uav_typed u0.xyzw, r0.xyzw, r2.yyyy
                
                #line 103
                iadd r3.x, r0.x, l(1)
                mov r3.yzw, r0.wwww
                iadd r4.x, r0.x, l(1)
                mov r4.yzw, r0.wwww
                ld_uav_typed_indexable(texture2d)(float,float,float,float) r2.y, r4.xyzw, u0.yxzw
                add r2.y, r2.x, r2.y
                store_uav_typed u0.xyzw, r3.xyzw, r2.yyyy
                
                #line 104
                ineg r2.y, l(1)
                iadd r3.x, r0.x, r2.y
                mov r3.yzw, r0.wwww
                ineg r2.y, l(1)
                iadd r1.x, r0.x, r2.y
                ld_uav_typed_indexable(texture2d)(float,float,float,float) r1.x, r1.xyzw, u0.xyzw
                add r1.x, r2.x, r1.x
                store_uav_typed u0.xyzw, r3.xyzw, r1.xxxx
                
                #line 105
                iadd r3.yzw, r1.wwww, l(0, 1, 1, 1)
                mov r3.x, r0.x
                iadd r0.yzw, r1.wwww, l(0, 1, 1, 1)
                ld_uav_typed_indexable(texture2d)(float,float,float,float) r1.x, r0.xyzw, u0.xyzw
                add r1.x, r2.x, r1.x
                store_uav_typed u0.xyzw, r3.xyzw, r1.xxxx
                
                #line 106
                ineg r1.x, l(1)
                iadd r3.yzw, r1.xxxx, r1.wwww
                mov r3.x, r0.x
                ineg r1.x, l(1)
                iadd r0.yzw, r1.xxxx, r1.wwww
                ld_uav_typed_indexable(texture2d)(float,float,float,float) r0.x, r0.xyzw, u0.xyzw
                add r0.x, r2.x, r0.x
                store_uav_typed u0.xyzw, r3.xyzw, r0.xxxx
                
                #line 107
                ret 
                // Approximately 39 instruction slots used
                            
            };
        }

    }

}

