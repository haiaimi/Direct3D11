//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbSettings
{
    float   gWeights[11] = { 0.0500000007, 0.0500000007, 0.100000001, 0.100000001, 0.100000001, 0.200000003, 0.100000001, 0.100000001, 0.100000001, 0.0500000007, 0.0500000007 };// Offset:    0, size:  164
}

//
// 2 local object(s)
//
Texture2D gInput;
RWTexture2D gOutput;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 2 technique(s)
    //
    technique11 HorzBlur
    {
        pass P0
        {
            VertexShader = NULL;
            PixelShader = NULL;
            ComputeShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbSettings
                // {
                //
                //   float gWeights[11];                // Offset:    0 Size:   164
                //      = 0x3d4ccccd 0x00000000 0x00000000 0x00000000 
                //        0x3d4ccccd 0x00000000 0x00000000 0x00000000 
                //        0x3dcccccd 0x00000000 0x00000000 0x00000000 
                //        0x3dcccccd 0x00000000 0x00000000 0x00000000 
                //        0x3dcccccd 0x00000000 0x00000000 0x00000000 
                //        0x3e4ccccd 0x00000000 0x00000000 0x00000000 
                //        0x3dcccccd 0x00000000 0x00000000 0x00000000 
                //        0x3dcccccd 0x00000000 0x00000000 0x00000000 
                //        0x3dcccccd 0x00000000 0x00000000 0x00000000 
                //        0x3d4ccccd 0x00000000 0x00000000 0x00000000 
                //        0x3d4ccccd 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // gInput                            texture  float4          2d             t0      1 
                // gOutput                               UAV  float4          2d             u0      1 
                // cbSettings                        cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // no Input
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // no Output
                cs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[11], immediateIndexed
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_uav_typed_texture2d (float,float,float,float) u0
                dcl_input vThreadIDInGroup.x
                dcl_input vThreadID.xy
                dcl_temps 3
                dcl_tgsm_structured g0, 16, 266
                dcl_thread_group 256, 1, 1
                //
                // Initial variable locations:
                //   vThreadIDInGroup.x <- groupThreadID.x; vThreadIDInGroup.y <- groupThreadID.y; vThreadIDInGroup.z <- groupThreadID.z; 
                //   vThreadID.x <- dispatchThreadID.x; vThreadID.y <- dispatchThreadID.y; vThreadID.z <- dispatchThreadID.z
                //
                #line 17 "D:\vs项目\Introduction-to-3D-Game-Programming-With-DirectX11-master\Chapter 12 The Compute Shader\Blur\FX\Blur.fx"
                mov r0.x, l(5)  // r0.x <- gBlurRadius
                
                #line 39
                ilt r0.y, vThreadIDInGroup.x, r0.x
                if_nz r0.y
                  mov r0.y, vThreadIDInGroup.x  // r0.y <- groupThreadID.x
                
                #line 42
                  ineg r0.z, r0.x
                  iadd r0.z, r0.z, vThreadID.x
                  imax r1.x, r0.z, l(0)  // r1.x <- x
                
                #line 43
                  mov r1.y, vThreadID.y
                  mov r1.zw, l(0,0,0,0)
                  ld_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyzw, t0.xyzw
                  store_structured g0.x, r0.y, l(0), r1.x
                  store_structured g0.x, r0.y, l(4), r1.y
                  store_structured g0.x, r0.y, l(8), r1.z
                  store_structured g0.x, r0.y, l(12), r1.w
                
                #line 44
                endif 
                
                #line 45
                ige r0.y, vThreadIDInGroup.x, l(251)
                if_nz r0.y
                  mov r0.y, vThreadIDInGroup.x  // r0.y <- groupThreadID.x
                
                #line 48
                  iadd r0.z, r0.x, vThreadID.x
                  resinfo_indexable(texture2d)(float,float,float,float)_uint r0.w, l(0), t0.yzwx
                  mov r1.x, l(1)
                  ineg r1.x, r1.x
                  iadd r0.w, r0.w, r1.x
                  umin r1.x, r0.w, r0.z  // r1.x <- x
                
                #line 49
                  iadd r0.y, r0.y, l(10)
                  mov r1.y, vThreadID.y
                  mov r1.zw, l(0,0,0,0)
                  ld_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyzw, t0.xyzw
                  store_structured g0.x, r0.y, l(0), r1.x
                  store_structured g0.x, r0.y, l(4), r1.y
                  store_structured g0.x, r0.y, l(8), r1.z
                  store_structured g0.x, r0.y, l(12), r1.w
                
                #line 50
                endif 
                
                #line 53
                iadd r0.y, r0.x, vThreadIDInGroup.x
                mov r0.zw, vThreadID.xxxy
                resinfo_indexable(texture2d)(float,float,float,float)_uint r1.xy, l(0), t0.xyzw
                mov r1.zw, l(0,0,1,1)
                ineg r1.zw, r1.zzzw
                iadd r1.xy, r1.zwzz, r1.xyxx
                umin r1.xy, r0.zwzz, r1.xyxx
                mov r1.zw, l(0,0,0,0)
                ld_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyzw, t0.xyzw
                store_structured g0.x, r0.y, l(0), r1.x
                store_structured g0.x, r0.y, l(4), r1.y
                store_structured g0.x, r0.y, l(8), r1.z
                store_structured g0.x, r0.y, l(12), r1.w
                
                #line 56
                sync_g_t
                
                #line 61
                itof r1.xyzw, l(0, 0, 0, 0)  // r1.x <- blurColor.x; r1.y <- blurColor.y; r1.z <- blurColor.z; r1.w <- blurColor.w
                
                #line 69
                mov r0.y, l(-5)  // r0.y <- i
                
                #line 71
                iadd r0.z, r0.x, vThreadIDInGroup.x
                itof r0.z, r0.z  // r0.z <- o
                
                #line 72
                iadd r0.w, r0.x, vThreadIDInGroup.x
                iadd r0.y, r0.y, r0.w  // r0.y <- k
                
                #line 75
                ftou r0.w, r0.z
                ld_structured r0.w, r0.w, l(0), g0.xxxx
                mul r0.w, r0.w, l(0.299000)
                ftou r2.x, r0.z
                ld_structured r2.x, r2.x, l(4), g0.xxxx
                mul r2.x, r2.x, l(0.587000)
                add r0.w, r0.w, r2.x
                ftou r0.z, r0.z
                ld_structured r0.z, r0.z, l(8), g0.xxxx
                mul r0.z, r0.z, l(0.114000)
                add r0.z, r0.z, r0.w  // r0.z <- oGray
                
                #line 76
                ld_structured r0.w, r0.y, l(0), g0.xxxx
                mul r0.w, r0.w, l(0.299000)
                ld_structured r2.x, r0.y, l(4), g0.xxxx
                mul r2.x, r2.x, l(0.587000)
                add r0.w, r0.w, r2.x
                ld_structured r2.x, r0.y, l(8), g0.xxxx
                mul r2.x, r2.x, l(0.114000)
                add r0.w, r0.w, r2.x  // r0.w <- kGray
                
                #line 80
                div r0.z, r0.w, r0.z
                mul r0.z, r0.z, cb0[0].x
                ld_structured r2.x, r0.y, l(0), g0.xxxx
                ld_structured r2.y, r0.y, l(4), g0.xxxx
                ld_structured r2.z, r0.y, l(8), g0.xxxx
                ld_structured r2.w, r0.y, l(12), g0.xxxx
                mul r2.xyzw, r0.zzzz, r2.xyzw
                add r1.xyzw, r1.xyzw, r2.xyzw
                
                #line 71
                iadd r0.y, r0.x, vThreadIDInGroup.x
                itof r0.y, r0.y  // r0.y <- o
                
                #line 72
                iadd r0.z, r0.x, vThreadIDInGroup.x
                iadd r0.z, r0.z, l(-4)  // r0.z <- k
                
                #line 75
                ftou r0.w, r0.y
                ld_structured r0.w, r0.w, l(0), g0.xxxx
                mul r0.w, r0.w, l(0.299000)
                ftou r2.x, r0.y
                ld_structured r2.x, r2.x, l(4), g0.xxxx
                mul r2.x, r2.x, l(0.587000)
                add r0.w, r0.w, r2.x
                ftou r0.y, r0.y
                ld_structured r0.y, r0.y, l(8), g0.xxxx
                mul r0.y, r0.y, l(0.114000)
                add r0.y, r0.y, r0.w  // r0.y <- oGray
                
                #line 76
                ld_structured r0.w, r0.z, l(0), g0.xxxx
                mul r0.w, r0.w, l(0.299000)
                ld_structured r2.x, r0.z, l(4), g0.xxxx
                mul r2.x, r2.x, l(0.587000)
                add r0.w, r0.w, r2.x
                ld_structured r2.x, r0.z, l(8), g0.xxxx
                mul r2.x, r2.x, l(0.114000)
                add r0.w, r0.w, r2.x  // r0.w <- kGray
                
                #line 80
                div r0.y, r0.w, r0.y
                mul r0.y, r0.y, cb0[1].x
                ld_structured r2.x, r0.z, l(0), g0.xxxx
                ld_structured r2.y, r0.z, l(4), g0.xxxx
                ld_structured r2.z, r0.z, l(8), g0.xxxx
                ld_structured r2.w, r0.z, l(12), g0.xxxx
                mul r2.xyzw, r0.yyyy, r2.xyzw
                add r1.xyzw, r1.xyzw, r2.xyzw
                
                #line 71
                iadd r0.y, r0.x, vThreadIDInGroup.x
                itof r0.y, r0.y  // r0.y <- o
                
                #line 72
                iadd r0.z, r0.x, vThreadIDInGroup.x
                iadd r0.z, r0.z, l(-3)  // r0.z <- k
                
                #line 75
                ftou r0.w, r0.y
                ld_structured r0.w, r0.w, l(0), g0.xxxx
                mul r0.w, r0.w, l(0.299000)
                ftou r2.x, r0.y
                ld_structured r2.x, r2.x, l(4), g0.xxxx
                mul r2.x, r2.x, l(0.587000)
                add r0.w, r0.w, r2.x
                ftou r0.y, r0.y
                ld_structured r0.y, r0.y, l(8), g0.xxxx
                mul r0.y, r0.y, l(0.114000)
                add r0.y, r0.y, r0.w  // r0.y <- oGray
                
                #line 76
                ld_structured r0.w, r0.z, l(0), g0.xxxx
                mul r0.w, r0.w, l(0.299000)
                ld_structured r2.x, r0.z, l(4), g0.xxxx
                mul r2.x, r2.x, l(0.587000)
                add r0.w, r0.w, r2.x
                ld_structured r2.x, r0.z, l(8), g0.xxxx
                mul r2.x, r2.x, l(0.114000)
                add r0.w, r0.w, r2.x  // r0.w <- kGray
                
                #line 80
                div r0.y, r0.w, r0.y
                mul r0.y, r0.y, cb0[2].x
                ld_structured r2.x, r0.z, l(0), g0.xxxx
                ld_structured r2.y, r0.z, l(4), g0.xxxx
                ld_structured r2.z, r0.z, l(8), g0.xxxx
                ld_structured r2.w, r0.z, l(12), g0.xxxx
                mul r2.xyzw, r0.yyyy, r2.xyzw
                add r1.xyzw, r1.xyzw, r2.xyzw
                
                #line 71
                iadd r0.y, r0.x, vThreadIDInGroup.x
                itof r0.y, r0.y  // r0.y <- o
                
                #line 72
                iadd r0.z, r0.x, vThreadIDInGroup.x
                iadd r0.z, r0.z, l(-2)  // r0.z <- k
                
                #line 75
                ftou r0.w, r0.y
                ld_structured r0.w, r0.w, l(0), g0.xxxx
                mul r0.w, r0.w, l(0.299000)
                ftou r2.x, r0.y
                ld_structured r2.x, r2.x, l(4), g0.xxxx
                mul r2.x, r2.x, l(0.587000)
                add r0.w, r0.w, r2.x
                ftou r0.y, r0.y
                ld_structured r0.y, r0.y, l(8), g0.xxxx
                mul r0.y, r0.y, l(0.114000)
                add r0.y, r0.y, r0.w  // r0.y <- oGray
                
                #line 76
                ld_structured r0.w, r0.z, l(0), g0.xxxx
                mul r0.w, r0.w, l(0.299000)
                ld_structured r2.x, r0.z, l(4), g0.xxxx
                mul r2.x, r2.x, l(0.587000)
                add r0.w, r0.w, r2.x
                ld_structured r2.x, r0.z, l(8), g0.xxxx
                mul r2.x, r2.x, l(0.114000)
                add r0.w, r0.w, r2.x  // r0.w <- kGray
                
                #line 80
                div r0.y, r0.w, r0.y
                mul r0.y, r0.y, cb0[3].x
                ld_structured r2.x, r0.z, l(0), g0.xxxx
                ld_structured r2.y, r0.z, l(4), g0.xxxx
                ld_structured r2.z, r0.z, l(8), g0.xxxx
                ld_structured r2.w, r0.z, l(12), g0.xxxx
                mul r2.xyzw, r0.yyyy, r2.xyzw
                add r1.xyzw, r1.xyzw, r2.xyzw
                
                #line 71
                iadd r0.y, r0.x, vThreadIDInGroup.x
                itof r0.y, r0.y  // r0.y <- o
                
                #line 72
                iadd r0.z, r0.x, vThreadIDInGroup.x
                iadd r0.z, r0.z, l(-1)  // r0.z <- k
                
                #line 75
                ftou r0.w, r0.y
                ld_structured r0.w, r0.w, l(0), g0.xxxx
                mul r0.w, r0.w, l(0.299000)
                ftou r2.x, r0.y
                ld_structured r2.x, r2.x, l(4), g0.xxxx
                mul r2.x, r2.x, l(0.587000)
                add r0.w, r0.w, r2.x
                ftou r0.y, r0.y
                ld_structured r0.y, r0.y, l(8), g0.xxxx
                mul r0.y, r0.y, l(0.114000)
                add r0.y, r0.y, r0.w  // r0.y <- oGray
                
                #line 76
                ld_structured r0.w, r0.z, l(0), g0.xxxx
                mul r0.w, r0.w, l(0.299000)
                ld_structured r2.x, r0.z, l(4), g0.xxxx
                mul r2.x, r2.x, l(0.587000)
                add r0.w, r0.w, r2.x
                ld_structured r2.x, r0.z, l(8), g0.xxxx
                mul r2.x, r2.x, l(0.114000)
                add r0.w, r0.w, r2.x  // r0.w <- kGray
                
                #line 80
                div r0.y, r0.w, r0.y
                mul r0.y, r0.y, cb0[4].x
                ld_structured r2.x, r0.z, l(0), g0.xxxx
                ld_structured r2.y, r0.z, l(4), g0.xxxx
                ld_structured r2.z, r0.z, l(8), g0.xxxx
                ld_structured r2.w, r0.z, l(12), g0.xxxx
                mul r2.xyzw, r0.yyyy, r2.xyzw
                add r1.xyzw, r1.xyzw, r2.xyzw
                
                #line 81
                iadd r0.y, l(1), l(-1)  // r0.y <- i
                
                #line 71
                iadd r0.z, r0.x, vThreadIDInGroup.x
                itof r0.z, r0.z  // r0.z <- o
                
                #line 72
                iadd r0.w, r0.x, vThreadIDInGroup.x
                iadd r0.w, r0.y, r0.w  // r0.w <- k
                
                #line 75
                ftou r2.x, r0.z
                ld_structured r2.x, r2.x, l(0), g0.xxxx
                mul r2.x, r2.x, l(0.299000)
                ftou r2.y, r0.z
                ld_structured r2.y, r2.y, l(4), g0.xxxx
                mul r2.y, r2.y, l(0.587000)
                add r2.x, r2.y, r2.x
                ftou r0.z, r0.z
                ld_structured r0.z, r0.z, l(8), g0.xxxx
                mul r0.z, r0.z, l(0.114000)
                add r0.z, r0.z, r2.x  // r0.z <- oGray
                
                #line 76
                ld_structured r2.x, r0.w, l(0), g0.xxxx
                mul r2.x, r2.x, l(0.299000)
                ld_structured r2.y, r0.w, l(4), g0.xxxx
                mul r2.y, r2.y, l(0.587000)
                add r2.x, r2.y, r2.x
                ld_structured r2.y, r0.w, l(8), g0.xxxx
                mul r2.y, r2.y, l(0.114000)
                add r2.x, r2.y, r2.x  // r2.x <- kGray
                
                #line 80
                div r0.z, r2.x, r0.z
                mul r0.z, r0.z, cb0[5].x
                ld_structured r2.x, r0.w, l(0), g0.xxxx
                ld_structured r2.y, r0.w, l(4), g0.xxxx
                ld_structured r2.z, r0.w, l(8), g0.xxxx
                ld_structured r2.w, r0.w, l(12), g0.xxxx
                mul r2.xyzw, r0.zzzz, r2.xyzw
                add r1.xyzw, r1.xyzw, r2.xyzw
                
                #line 81
                iadd r0.y, r0.y, l(1)
                
                #line 71
                iadd r0.z, r0.x, vThreadIDInGroup.x
                itof r0.z, r0.z  // r0.z <- o
                
                #line 72
                iadd r0.w, r0.x, vThreadIDInGroup.x
                iadd r0.w, r0.y, r0.w  // r0.w <- k
                
                #line 75
                ftou r2.x, r0.z
                ld_structured r2.x, r2.x, l(0), g0.xxxx
                mul r2.x, r2.x, l(0.299000)
                ftou r2.y, r0.z
                ld_structured r2.y, r2.y, l(4), g0.xxxx
                mul r2.y, r2.y, l(0.587000)
                add r2.x, r2.y, r2.x
                ftou r0.z, r0.z
                ld_structured r0.z, r0.z, l(8), g0.xxxx
                mul r0.z, r0.z, l(0.114000)
                add r0.z, r0.z, r2.x  // r0.z <- oGray
                
                #line 76
                ld_structured r2.x, r0.w, l(0), g0.xxxx
                mul r2.x, r2.x, l(0.299000)
                ld_structured r2.y, r0.w, l(4), g0.xxxx
                mul r2.y, r2.y, l(0.587000)
                add r2.x, r2.y, r2.x
                ld_structured r2.y, r0.w, l(8), g0.xxxx
                mul r2.y, r2.y, l(0.114000)
                add r2.x, r2.y, r2.x  // r2.x <- kGray
                
                #line 80
                div r0.z, r2.x, r0.z
                mul r0.z, r0.z, cb0[6].x
                ld_structured r2.x, r0.w, l(0), g0.xxxx
                ld_structured r2.y, r0.w, l(4), g0.xxxx
                ld_structured r2.z, r0.w, l(8), g0.xxxx
                ld_structured r2.w, r0.w, l(12), g0.xxxx
                mul r2.xyzw, r0.zzzz, r2.xyzw
                add r1.xyzw, r1.xyzw, r2.xyzw
                
                #line 81
                iadd r0.y, r0.y, l(1)
                
                #line 71
                iadd r0.z, r0.x, vThreadIDInGroup.x
                itof r0.z, r0.z  // r0.z <- o
                
                #line 72
                iadd r0.w, r0.x, vThreadIDInGroup.x
                iadd r0.w, r0.y, r0.w  // r0.w <- k
                
                #line 75
                ftou r2.x, r0.z
                ld_structured r2.x, r2.x, l(0), g0.xxxx
                mul r2.x, r2.x, l(0.299000)
                ftou r2.y, r0.z
                ld_structured r2.y, r2.y, l(4), g0.xxxx
                mul r2.y, r2.y, l(0.587000)
                add r2.x, r2.y, r2.x
                ftou r0.z, r0.z
                ld_structured r0.z, r0.z, l(8), g0.xxxx
                mul r0.z, r0.z, l(0.114000)
                add r0.z, r0.z, r2.x  // r0.z <- oGray
                
                #line 76
                ld_structured r2.x, r0.w, l(0), g0.xxxx
                mul r2.x, r2.x, l(0.299000)
                ld_structured r2.y, r0.w, l(4), g0.xxxx
                mul r2.y, r2.y, l(0.587000)
                add r2.x, r2.y, r2.x
                ld_structured r2.y, r0.w, l(8), g0.xxxx
                mul r2.y, r2.y, l(0.114000)
                add r2.x, r2.y, r2.x  // r2.x <- kGray
                
                #line 80
                div r0.z, r2.x, r0.z
                mul r0.z, r0.z, cb0[7].x
                ld_structured r2.x, r0.w, l(0), g0.xxxx
                ld_structured r2.y, r0.w, l(4), g0.xxxx
                ld_structured r2.z, r0.w, l(8), g0.xxxx
                ld_structured r2.w, r0.w, l(12), g0.xxxx
                mul r2.xyzw, r0.zzzz, r2.xyzw
                add r1.xyzw, r1.xyzw, r2.xyzw
                
                #line 81
                iadd r0.y, r0.y, l(1)
                
                #line 71
                iadd r0.z, r0.x, vThreadIDInGroup.x
                itof r0.z, r0.z  // r0.z <- o
                
                #line 72
                iadd r0.w, r0.x, vThreadIDInGroup.x
                iadd r0.w, r0.y, r0.w  // r0.w <- k
                
                #line 75
                ftou r2.x, r0.z
                ld_structured r2.x, r2.x, l(0), g0.xxxx
                mul r2.x, r2.x, l(0.299000)
                ftou r2.y, r0.z
                ld_structured r2.y, r2.y, l(4), g0.xxxx
                mul r2.y, r2.y, l(0.587000)
                add r2.x, r2.y, r2.x
                ftou r0.z, r0.z
                ld_structured r0.z, r0.z, l(8), g0.xxxx
                mul r0.z, r0.z, l(0.114000)
                add r0.z, r0.z, r2.x  // r0.z <- oGray
                
                #line 76
                ld_structured r2.x, r0.w, l(0), g0.xxxx
                mul r2.x, r2.x, l(0.299000)
                ld_structured r2.y, r0.w, l(4), g0.xxxx
                mul r2.y, r2.y, l(0.587000)
                add r2.x, r2.y, r2.x
                ld_structured r2.y, r0.w, l(8), g0.xxxx
                mul r2.y, r2.y, l(0.114000)
                add r2.x, r2.y, r2.x  // r2.x <- kGray
                
                #line 80
                div r0.z, r2.x, r0.z
                mul r0.z, r0.z, cb0[8].x
                ld_structured r2.x, r0.w, l(0), g0.xxxx
                ld_structured r2.y, r0.w, l(4), g0.xxxx
                ld_structured r2.z, r0.w, l(8), g0.xxxx
                ld_structured r2.w, r0.w, l(12), g0.xxxx
                mul r2.xyzw, r0.zzzz, r2.xyzw
                add r1.xyzw, r1.xyzw, r2.xyzw
                
                #line 81
                iadd r0.y, r0.y, l(1)
                
                #line 71
                iadd r0.z, r0.x, vThreadIDInGroup.x
                itof r0.z, r0.z  // r0.z <- o
                
                #line 72
                iadd r0.w, r0.x, vThreadIDInGroup.x
                iadd r0.w, r0.y, r0.w  // r0.w <- k
                
                #line 75
                ftou r2.x, r0.z
                ld_structured r2.x, r2.x, l(0), g0.xxxx
                mul r2.x, r2.x, l(0.299000)
                ftou r2.y, r0.z
                ld_structured r2.y, r2.y, l(4), g0.xxxx
                mul r2.y, r2.y, l(0.587000)
                add r2.x, r2.y, r2.x
                ftou r0.z, r0.z
                ld_structured r0.z, r0.z, l(8), g0.xxxx
                mul r0.z, r0.z, l(0.114000)
                add r0.z, r0.z, r2.x  // r0.z <- oGray
                
                #line 76
                ld_structured r2.x, r0.w, l(0), g0.xxxx
                mul r2.x, r2.x, l(0.299000)
                ld_structured r2.y, r0.w, l(4), g0.xxxx
                mul r2.y, r2.y, l(0.587000)
                add r2.x, r2.y, r2.x
                ld_structured r2.y, r0.w, l(8), g0.xxxx
                mul r2.y, r2.y, l(0.114000)
                add r2.x, r2.y, r2.x  // r2.x <- kGray
                
                #line 80
                div r0.z, r2.x, r0.z
                mul r0.z, r0.z, cb0[9].x
                ld_structured r2.x, r0.w, l(0), g0.xxxx
                ld_structured r2.y, r0.w, l(4), g0.xxxx
                ld_structured r2.z, r0.w, l(8), g0.xxxx
                ld_structured r2.w, r0.w, l(12), g0.xxxx
                mul r2.xyzw, r0.zzzz, r2.xyzw
                add r1.xyzw, r1.xyzw, r2.xyzw
                
                #line 81
                iadd r0.y, r0.y, l(1)
                
                #line 71
                iadd r0.z, r0.x, vThreadIDInGroup.x
                itof r0.z, r0.z  // r0.z <- o
                
                #line 72
                iadd r0.x, r0.x, vThreadIDInGroup.x
                iadd r0.x, r0.y, r0.x  // r0.x <- k
                
                #line 75
                ftou r0.y, r0.z
                ld_structured r0.y, r0.y, l(0), g0.xxxx
                mul r0.y, r0.y, l(0.299000)
                ftou r0.w, r0.z
                ld_structured r0.w, r0.w, l(4), g0.xxxx
                mul r0.w, r0.w, l(0.587000)
                add r0.y, r0.w, r0.y
                ftou r0.z, r0.z
                ld_structured r0.z, r0.z, l(8), g0.xxxx
                mul r0.z, r0.z, l(0.114000)
                add r0.y, r0.z, r0.y  // r0.y <- oGray
                
                #line 76
                ld_structured r0.z, r0.x, l(0), g0.xxxx
                mul r0.z, r0.z, l(0.299000)
                ld_structured r0.w, r0.x, l(4), g0.xxxx
                mul r0.w, r0.w, l(0.587000)
                add r0.z, r0.w, r0.z
                ld_structured r0.w, r0.x, l(8), g0.xxxx
                mul r0.w, r0.w, l(0.114000)
                add r0.z, r0.w, r0.z  // r0.z <- kGray
                
                #line 80
                div r0.y, r0.z, r0.y
                mul r0.y, r0.y, cb0[10].x
                ld_structured r2.x, r0.x, l(0), g0.xxxx
                ld_structured r2.y, r0.x, l(4), g0.xxxx
                ld_structured r2.z, r0.x, l(8), g0.xxxx
                ld_structured r2.w, r0.x, l(12), g0.xxxx
                mul r0.xyzw, r0.yyyy, r2.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- blurColor.x; r0.y <- blurColor.y; r0.z <- blurColor.z; r0.w <- blurColor.w
                
                #line 85
                mov r1.xyzw, vThreadID.xyyy
                store_uav_typed u0.xyzw, r1.xyzw, r0.xyzw
                
                #line 97
                ret 
                // Approximately 399 instruction slots used
                            
            };
        }

    }

    technique11 VertBlur
    {
        pass P0
        {
            VertexShader = NULL;
            PixelShader = NULL;
            ComputeShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbSettings
                // {
                //
                //   float gWeights[11];                // Offset:    0 Size:   164
                //      = 0x3d4ccccd 0x00000000 0x00000000 0x00000000 
                //        0x3d4ccccd 0x00000000 0x00000000 0x00000000 
                //        0x3dcccccd 0x00000000 0x00000000 0x00000000 
                //        0x3dcccccd 0x00000000 0x00000000 0x00000000 
                //        0x3dcccccd 0x00000000 0x00000000 0x00000000 
                //        0x3e4ccccd 0x00000000 0x00000000 0x00000000 
                //        0x3dcccccd 0x00000000 0x00000000 0x00000000 
                //        0x3dcccccd 0x00000000 0x00000000 0x00000000 
                //        0x3dcccccd 0x00000000 0x00000000 0x00000000 
                //        0x3d4ccccd 0x00000000 0x00000000 0x00000000 
                //        0x3d4ccccd 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // gInput                            texture  float4          2d             t0      1 
                // gOutput                               UAV  float4          2d             u0      1 
                // cbSettings                        cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // no Input
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // no Output
                cs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[11], immediateIndexed
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_uav_typed_texture2d (float,float,float,float) u0
                dcl_input vThreadIDInGroup.y
                dcl_input vThreadID.xy
                dcl_temps 3
                dcl_tgsm_structured g0, 16, 266
                dcl_thread_group 1, 256, 1
                //
                // Initial variable locations:
                //   vThreadIDInGroup.x <- groupThreadID.x; vThreadIDInGroup.y <- groupThreadID.y; vThreadIDInGroup.z <- groupThreadID.z; 
                //   vThreadID.x <- dispatchThreadID.x; vThreadID.y <- dispatchThreadID.y; vThreadID.z <- dispatchThreadID.z
                //
                #line 17 "D:\vs项目\Introduction-to-3D-Game-Programming-With-DirectX11-master\Chapter 12 The Compute Shader\Blur\FX\Blur.fx"
                mov r0.x, l(5)  // r0.x <- gBlurRadius
                
                #line 111
                ilt r0.y, vThreadIDInGroup.y, r0.x
                if_nz r0.y
                  mov r0.y, vThreadIDInGroup.y  // r0.y <- groupThreadID.y
                
                #line 114
                  ineg r0.z, r0.x
                  iadd r0.z, r0.z, vThreadID.y
                  imax r1.y, r0.z, l(0)  // r1.y <- y
                
                #line 115
                  mov r1.x, vThreadID.x
                  mov r1.zw, l(0,0,0,0)
                  ld_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyzw, t0.xyzw
                  store_structured g0.x, r0.y, l(0), r1.x
                  store_structured g0.x, r0.y, l(4), r1.y
                  store_structured g0.x, r0.y, l(8), r1.z
                  store_structured g0.x, r0.y, l(12), r1.w
                
                #line 116
                endif 
                
                #line 117
                ige r0.y, vThreadIDInGroup.y, l(251)
                if_nz r0.y
                  mov r0.y, vThreadIDInGroup.y  // r0.y <- groupThreadID.y
                
                #line 120
                  iadd r0.z, r0.x, vThreadID.y
                  resinfo_indexable(texture2d)(float,float,float,float)_uint r0.w, l(0), t0.xzwy
                  mov r1.x, l(1)
                  ineg r1.x, r1.x
                  iadd r0.w, r0.w, r1.x
                  umin r1.y, r0.w, r0.z  // r1.y <- y
                
                #line 121
                  iadd r0.y, r0.y, l(10)
                  mov r1.x, vThreadID.x
                  mov r1.zw, l(0,0,0,0)
                  ld_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyzw, t0.xyzw
                  store_structured g0.x, r0.y, l(0), r1.x
                  store_structured g0.x, r0.y, l(4), r1.y
                  store_structured g0.x, r0.y, l(8), r1.z
                  store_structured g0.x, r0.y, l(12), r1.w
                
                #line 122
                endif 
                
                #line 125
                iadd r0.y, r0.x, vThreadIDInGroup.y
                mov r0.zw, vThreadID.xxxy
                resinfo_indexable(texture2d)(float,float,float,float)_uint r1.xy, l(0), t0.xyzw
                mov r1.zw, l(0,0,1,1)
                ineg r1.zw, r1.zzzw
                iadd r1.xy, r1.zwzz, r1.xyxx
                umin r1.xy, r0.zwzz, r1.xyxx
                mov r1.zw, l(0,0,0,0)
                ld_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyzw, t0.xyzw
                store_structured g0.x, r0.y, l(0), r1.x
                store_structured g0.x, r0.y, l(4), r1.y
                store_structured g0.x, r0.y, l(8), r1.z
                store_structured g0.x, r0.y, l(12), r1.w
                
                #line 129
                sync_g_t
                
                #line 135
                itof r1.xyzw, l(0, 0, 0, 0)  // r1.x <- blurColor.x; r1.y <- blurColor.y; r1.z <- blurColor.z; r1.w <- blurColor.w
                
                #line 143
                mov r0.y, l(-5)  // r0.y <- i
                
                #line 145
                iadd r0.z, r0.x, vThreadIDInGroup.y
                itof r0.z, r0.z  // r0.z <- o
                
                #line 146
                iadd r0.w, r0.x, vThreadIDInGroup.y
                iadd r0.y, r0.y, r0.w  // r0.y <- k
                
                #line 149
                ftou r0.w, r0.z
                ld_structured r0.w, r0.w, l(0), g0.xxxx
                mul r0.w, r0.w, l(0.299000)
                ftou r2.x, r0.z
                ld_structured r2.x, r2.x, l(4), g0.xxxx
                mul r2.x, r2.x, l(0.587000)
                add r0.w, r0.w, r2.x
                ftou r0.z, r0.z
                ld_structured r0.z, r0.z, l(8), g0.xxxx
                mul r0.z, r0.z, l(0.114000)
                add r0.z, r0.z, r0.w  // r0.z <- oGray
                
                #line 150
                ld_structured r0.w, r0.y, l(0), g0.xxxx
                mul r0.w, r0.w, l(0.299000)
                ld_structured r2.x, r0.y, l(4), g0.xxxx
                mul r2.x, r2.x, l(0.587000)
                add r0.w, r0.w, r2.x
                ld_structured r2.x, r0.y, l(8), g0.xxxx
                mul r2.x, r2.x, l(0.114000)
                add r0.w, r0.w, r2.x  // r0.w <- kGray
                
                #line 154
                div r0.z, r0.w, r0.z
                mul r0.z, r0.z, cb0[0].x
                ld_structured r2.x, r0.y, l(0), g0.xxxx
                ld_structured r2.y, r0.y, l(4), g0.xxxx
                ld_structured r2.z, r0.y, l(8), g0.xxxx
                ld_structured r2.w, r0.y, l(12), g0.xxxx
                mul r2.xyzw, r0.zzzz, r2.xyzw
                mul r2.xyzw, r2.xyzw, l(0.900000, 0.900000, 0.900000, 0.900000)
                add r1.xyzw, r1.xyzw, r2.xyzw
                
                #line 145
                iadd r0.y, r0.x, vThreadIDInGroup.y
                itof r0.y, r0.y  // r0.y <- o
                
                #line 146
                iadd r0.z, r0.x, vThreadIDInGroup.y
                iadd r0.z, r0.z, l(-4)  // r0.z <- k
                
                #line 149
                ftou r0.w, r0.y
                ld_structured r0.w, r0.w, l(0), g0.xxxx
                mul r0.w, r0.w, l(0.299000)
                ftou r2.x, r0.y
                ld_structured r2.x, r2.x, l(4), g0.xxxx
                mul r2.x, r2.x, l(0.587000)
                add r0.w, r0.w, r2.x
                ftou r0.y, r0.y
                ld_structured r0.y, r0.y, l(8), g0.xxxx
                mul r0.y, r0.y, l(0.114000)
                add r0.y, r0.y, r0.w  // r0.y <- oGray
                
                #line 150
                ld_structured r0.w, r0.z, l(0), g0.xxxx
                mul r0.w, r0.w, l(0.299000)
                ld_structured r2.x, r0.z, l(4), g0.xxxx
                mul r2.x, r2.x, l(0.587000)
                add r0.w, r0.w, r2.x
                ld_structured r2.x, r0.z, l(8), g0.xxxx
                mul r2.x, r2.x, l(0.114000)
                add r0.w, r0.w, r2.x  // r0.w <- kGray
                
                #line 154
                div r0.y, r0.w, r0.y
                mul r0.y, r0.y, cb0[1].x
                ld_structured r2.x, r0.z, l(0), g0.xxxx
                ld_structured r2.y, r0.z, l(4), g0.xxxx
                ld_structured r2.z, r0.z, l(8), g0.xxxx
                ld_structured r2.w, r0.z, l(12), g0.xxxx
                mul r2.xyzw, r0.yyyy, r2.xyzw
                mul r2.xyzw, r2.xyzw, l(0.900000, 0.900000, 0.900000, 0.900000)
                add r1.xyzw, r1.xyzw, r2.xyzw
                
                #line 145
                iadd r0.y, r0.x, vThreadIDInGroup.y
                itof r0.y, r0.y  // r0.y <- o
                
                #line 146
                iadd r0.z, r0.x, vThreadIDInGroup.y
                iadd r0.z, r0.z, l(-3)  // r0.z <- k
                
                #line 149
                ftou r0.w, r0.y
                ld_structured r0.w, r0.w, l(0), g0.xxxx
                mul r0.w, r0.w, l(0.299000)
                ftou r2.x, r0.y
                ld_structured r2.x, r2.x, l(4), g0.xxxx
                mul r2.x, r2.x, l(0.587000)
                add r0.w, r0.w, r2.x
                ftou r0.y, r0.y
                ld_structured r0.y, r0.y, l(8), g0.xxxx
                mul r0.y, r0.y, l(0.114000)
                add r0.y, r0.y, r0.w  // r0.y <- oGray
                
                #line 150
                ld_structured r0.w, r0.z, l(0), g0.xxxx
                mul r0.w, r0.w, l(0.299000)
                ld_structured r2.x, r0.z, l(4), g0.xxxx
                mul r2.x, r2.x, l(0.587000)
                add r0.w, r0.w, r2.x
                ld_structured r2.x, r0.z, l(8), g0.xxxx
                mul r2.x, r2.x, l(0.114000)
                add r0.w, r0.w, r2.x  // r0.w <- kGray
                
                #line 154
                div r0.y, r0.w, r0.y
                mul r0.y, r0.y, cb0[2].x
                ld_structured r2.x, r0.z, l(0), g0.xxxx
                ld_structured r2.y, r0.z, l(4), g0.xxxx
                ld_structured r2.z, r0.z, l(8), g0.xxxx
                ld_structured r2.w, r0.z, l(12), g0.xxxx
                mul r2.xyzw, r0.yyyy, r2.xyzw
                mul r2.xyzw, r2.xyzw, l(0.900000, 0.900000, 0.900000, 0.900000)
                add r1.xyzw, r1.xyzw, r2.xyzw
                
                #line 145
                iadd r0.y, r0.x, vThreadIDInGroup.y
                itof r0.y, r0.y  // r0.y <- o
                
                #line 146
                iadd r0.z, r0.x, vThreadIDInGroup.y
                iadd r0.z, r0.z, l(-2)  // r0.z <- k
                
                #line 149
                ftou r0.w, r0.y
                ld_structured r0.w, r0.w, l(0), g0.xxxx
                mul r0.w, r0.w, l(0.299000)
                ftou r2.x, r0.y
                ld_structured r2.x, r2.x, l(4), g0.xxxx
                mul r2.x, r2.x, l(0.587000)
                add r0.w, r0.w, r2.x
                ftou r0.y, r0.y
                ld_structured r0.y, r0.y, l(8), g0.xxxx
                mul r0.y, r0.y, l(0.114000)
                add r0.y, r0.y, r0.w  // r0.y <- oGray
                
                #line 150
                ld_structured r0.w, r0.z, l(0), g0.xxxx
                mul r0.w, r0.w, l(0.299000)
                ld_structured r2.x, r0.z, l(4), g0.xxxx
                mul r2.x, r2.x, l(0.587000)
                add r0.w, r0.w, r2.x
                ld_structured r2.x, r0.z, l(8), g0.xxxx
                mul r2.x, r2.x, l(0.114000)
                add r0.w, r0.w, r2.x  // r0.w <- kGray
                
                #line 154
                div r0.y, r0.w, r0.y
                mul r0.y, r0.y, cb0[3].x
                ld_structured r2.x, r0.z, l(0), g0.xxxx
                ld_structured r2.y, r0.z, l(4), g0.xxxx
                ld_structured r2.z, r0.z, l(8), g0.xxxx
                ld_structured r2.w, r0.z, l(12), g0.xxxx
                mul r2.xyzw, r0.yyyy, r2.xyzw
                mul r2.xyzw, r2.xyzw, l(0.900000, 0.900000, 0.900000, 0.900000)
                add r1.xyzw, r1.xyzw, r2.xyzw
                
                #line 145
                iadd r0.y, r0.x, vThreadIDInGroup.y
                itof r0.y, r0.y  // r0.y <- o
                
                #line 146
                iadd r0.z, r0.x, vThreadIDInGroup.y
                iadd r0.z, r0.z, l(-1)  // r0.z <- k
                
                #line 149
                ftou r0.w, r0.y
                ld_structured r0.w, r0.w, l(0), g0.xxxx
                mul r0.w, r0.w, l(0.299000)
                ftou r2.x, r0.y
                ld_structured r2.x, r2.x, l(4), g0.xxxx
                mul r2.x, r2.x, l(0.587000)
                add r0.w, r0.w, r2.x
                ftou r0.y, r0.y
                ld_structured r0.y, r0.y, l(8), g0.xxxx
                mul r0.y, r0.y, l(0.114000)
                add r0.y, r0.y, r0.w  // r0.y <- oGray
                
                #line 150
                ld_structured r0.w, r0.z, l(0), g0.xxxx
                mul r0.w, r0.w, l(0.299000)
                ld_structured r2.x, r0.z, l(4), g0.xxxx
                mul r2.x, r2.x, l(0.587000)
                add r0.w, r0.w, r2.x
                ld_structured r2.x, r0.z, l(8), g0.xxxx
                mul r2.x, r2.x, l(0.114000)
                add r0.w, r0.w, r2.x  // r0.w <- kGray
                
                #line 154
                div r0.y, r0.w, r0.y
                mul r0.y, r0.y, cb0[4].x
                ld_structured r2.x, r0.z, l(0), g0.xxxx
                ld_structured r2.y, r0.z, l(4), g0.xxxx
                ld_structured r2.z, r0.z, l(8), g0.xxxx
                ld_structured r2.w, r0.z, l(12), g0.xxxx
                mul r2.xyzw, r0.yyyy, r2.xyzw
                mul r2.xyzw, r2.xyzw, l(0.900000, 0.900000, 0.900000, 0.900000)
                add r1.xyzw, r1.xyzw, r2.xyzw
                
                #line 155
                iadd r0.y, l(1), l(-1)  // r0.y <- i
                
                #line 145
                iadd r0.z, r0.x, vThreadIDInGroup.y
                itof r0.z, r0.z  // r0.z <- o
                
                #line 146
                iadd r0.w, r0.x, vThreadIDInGroup.y
                iadd r0.w, r0.y, r0.w  // r0.w <- k
                
                #line 149
                ftou r2.x, r0.z
                ld_structured r2.x, r2.x, l(0), g0.xxxx
                mul r2.x, r2.x, l(0.299000)
                ftou r2.y, r0.z
                ld_structured r2.y, r2.y, l(4), g0.xxxx
                mul r2.y, r2.y, l(0.587000)
                add r2.x, r2.y, r2.x
                ftou r0.z, r0.z
                ld_structured r0.z, r0.z, l(8), g0.xxxx
                mul r0.z, r0.z, l(0.114000)
                add r0.z, r0.z, r2.x  // r0.z <- oGray
                
                #line 150
                ld_structured r2.x, r0.w, l(0), g0.xxxx
                mul r2.x, r2.x, l(0.299000)
                ld_structured r2.y, r0.w, l(4), g0.xxxx
                mul r2.y, r2.y, l(0.587000)
                add r2.x, r2.y, r2.x
                ld_structured r2.y, r0.w, l(8), g0.xxxx
                mul r2.y, r2.y, l(0.114000)
                add r2.x, r2.y, r2.x  // r2.x <- kGray
                
                #line 154
                div r0.z, r2.x, r0.z
                mul r0.z, r0.z, cb0[5].x
                ld_structured r2.x, r0.w, l(0), g0.xxxx
                ld_structured r2.y, r0.w, l(4), g0.xxxx
                ld_structured r2.z, r0.w, l(8), g0.xxxx
                ld_structured r2.w, r0.w, l(12), g0.xxxx
                mul r2.xyzw, r0.zzzz, r2.xyzw
                mul r2.xyzw, r2.xyzw, l(0.900000, 0.900000, 0.900000, 0.900000)
                add r1.xyzw, r1.xyzw, r2.xyzw
                
                #line 155
                iadd r0.y, r0.y, l(1)
                
                #line 145
                iadd r0.z, r0.x, vThreadIDInGroup.y
                itof r0.z, r0.z  // r0.z <- o
                
                #line 146
                iadd r0.w, r0.x, vThreadIDInGroup.y
                iadd r0.w, r0.y, r0.w  // r0.w <- k
                
                #line 149
                ftou r2.x, r0.z
                ld_structured r2.x, r2.x, l(0), g0.xxxx
                mul r2.x, r2.x, l(0.299000)
                ftou r2.y, r0.z
                ld_structured r2.y, r2.y, l(4), g0.xxxx
                mul r2.y, r2.y, l(0.587000)
                add r2.x, r2.y, r2.x
                ftou r0.z, r0.z
                ld_structured r0.z, r0.z, l(8), g0.xxxx
                mul r0.z, r0.z, l(0.114000)
                add r0.z, r0.z, r2.x  // r0.z <- oGray
                
                #line 150
                ld_structured r2.x, r0.w, l(0), g0.xxxx
                mul r2.x, r2.x, l(0.299000)
                ld_structured r2.y, r0.w, l(4), g0.xxxx
                mul r2.y, r2.y, l(0.587000)
                add r2.x, r2.y, r2.x
                ld_structured r2.y, r0.w, l(8), g0.xxxx
                mul r2.y, r2.y, l(0.114000)
                add r2.x, r2.y, r2.x  // r2.x <- kGray
                
                #line 154
                div r0.z, r2.x, r0.z
                mul r0.z, r0.z, cb0[6].x
                ld_structured r2.x, r0.w, l(0), g0.xxxx
                ld_structured r2.y, r0.w, l(4), g0.xxxx
                ld_structured r2.z, r0.w, l(8), g0.xxxx
                ld_structured r2.w, r0.w, l(12), g0.xxxx
                mul r2.xyzw, r0.zzzz, r2.xyzw
                mul r2.xyzw, r2.xyzw, l(0.900000, 0.900000, 0.900000, 0.900000)
                add r1.xyzw, r1.xyzw, r2.xyzw
                
                #line 155
                iadd r0.y, r0.y, l(1)
                
                #line 145
                iadd r0.z, r0.x, vThreadIDInGroup.y
                itof r0.z, r0.z  // r0.z <- o
                
                #line 146
                iadd r0.w, r0.x, vThreadIDInGroup.y
                iadd r0.w, r0.y, r0.w  // r0.w <- k
                
                #line 149
                ftou r2.x, r0.z
                ld_structured r2.x, r2.x, l(0), g0.xxxx
                mul r2.x, r2.x, l(0.299000)
                ftou r2.y, r0.z
                ld_structured r2.y, r2.y, l(4), g0.xxxx
                mul r2.y, r2.y, l(0.587000)
                add r2.x, r2.y, r2.x
                ftou r0.z, r0.z
                ld_structured r0.z, r0.z, l(8), g0.xxxx
                mul r0.z, r0.z, l(0.114000)
                add r0.z, r0.z, r2.x  // r0.z <- oGray
                
                #line 150
                ld_structured r2.x, r0.w, l(0), g0.xxxx
                mul r2.x, r2.x, l(0.299000)
                ld_structured r2.y, r0.w, l(4), g0.xxxx
                mul r2.y, r2.y, l(0.587000)
                add r2.x, r2.y, r2.x
                ld_structured r2.y, r0.w, l(8), g0.xxxx
                mul r2.y, r2.y, l(0.114000)
                add r2.x, r2.y, r2.x  // r2.x <- kGray
                
                #line 154
                div r0.z, r2.x, r0.z
                mul r0.z, r0.z, cb0[7].x
                ld_structured r2.x, r0.w, l(0), g0.xxxx
                ld_structured r2.y, r0.w, l(4), g0.xxxx
                ld_structured r2.z, r0.w, l(8), g0.xxxx
                ld_structured r2.w, r0.w, l(12), g0.xxxx
                mul r2.xyzw, r0.zzzz, r2.xyzw
                mul r2.xyzw, r2.xyzw, l(0.900000, 0.900000, 0.900000, 0.900000)
                add r1.xyzw, r1.xyzw, r2.xyzw
                
                #line 155
                iadd r0.y, r0.y, l(1)
                
                #line 145
                iadd r0.z, r0.x, vThreadIDInGroup.y
                itof r0.z, r0.z  // r0.z <- o
                
                #line 146
                iadd r0.w, r0.x, vThreadIDInGroup.y
                iadd r0.w, r0.y, r0.w  // r0.w <- k
                
                #line 149
                ftou r2.x, r0.z
                ld_structured r2.x, r2.x, l(0), g0.xxxx
                mul r2.x, r2.x, l(0.299000)
                ftou r2.y, r0.z
                ld_structured r2.y, r2.y, l(4), g0.xxxx
                mul r2.y, r2.y, l(0.587000)
                add r2.x, r2.y, r2.x
                ftou r0.z, r0.z
                ld_structured r0.z, r0.z, l(8), g0.xxxx
                mul r0.z, r0.z, l(0.114000)
                add r0.z, r0.z, r2.x  // r0.z <- oGray
                
                #line 150
                ld_structured r2.x, r0.w, l(0), g0.xxxx
                mul r2.x, r2.x, l(0.299000)
                ld_structured r2.y, r0.w, l(4), g0.xxxx
                mul r2.y, r2.y, l(0.587000)
                add r2.x, r2.y, r2.x
                ld_structured r2.y, r0.w, l(8), g0.xxxx
                mul r2.y, r2.y, l(0.114000)
                add r2.x, r2.y, r2.x  // r2.x <- kGray
                
                #line 154
                div r0.z, r2.x, r0.z
                mul r0.z, r0.z, cb0[8].x
                ld_structured r2.x, r0.w, l(0), g0.xxxx
                ld_structured r2.y, r0.w, l(4), g0.xxxx
                ld_structured r2.z, r0.w, l(8), g0.xxxx
                ld_structured r2.w, r0.w, l(12), g0.xxxx
                mul r2.xyzw, r0.zzzz, r2.xyzw
                mul r2.xyzw, r2.xyzw, l(0.900000, 0.900000, 0.900000, 0.900000)
                add r1.xyzw, r1.xyzw, r2.xyzw
                
                #line 155
                iadd r0.y, r0.y, l(1)
                
                #line 145
                iadd r0.z, r0.x, vThreadIDInGroup.y
                itof r0.z, r0.z  // r0.z <- o
                
                #line 146
                iadd r0.w, r0.x, vThreadIDInGroup.y
                iadd r0.w, r0.y, r0.w  // r0.w <- k
                
                #line 149
                ftou r2.x, r0.z
                ld_structured r2.x, r2.x, l(0), g0.xxxx
                mul r2.x, r2.x, l(0.299000)
                ftou r2.y, r0.z
                ld_structured r2.y, r2.y, l(4), g0.xxxx
                mul r2.y, r2.y, l(0.587000)
                add r2.x, r2.y, r2.x
                ftou r0.z, r0.z
                ld_structured r0.z, r0.z, l(8), g0.xxxx
                mul r0.z, r0.z, l(0.114000)
                add r0.z, r0.z, r2.x  // r0.z <- oGray
                
                #line 150
                ld_structured r2.x, r0.w, l(0), g0.xxxx
                mul r2.x, r2.x, l(0.299000)
                ld_structured r2.y, r0.w, l(4), g0.xxxx
                mul r2.y, r2.y, l(0.587000)
                add r2.x, r2.y, r2.x
                ld_structured r2.y, r0.w, l(8), g0.xxxx
                mul r2.y, r2.y, l(0.114000)
                add r2.x, r2.y, r2.x  // r2.x <- kGray
                
                #line 154
                div r0.z, r2.x, r0.z
                mul r0.z, r0.z, cb0[9].x
                ld_structured r2.x, r0.w, l(0), g0.xxxx
                ld_structured r2.y, r0.w, l(4), g0.xxxx
                ld_structured r2.z, r0.w, l(8), g0.xxxx
                ld_structured r2.w, r0.w, l(12), g0.xxxx
                mul r2.xyzw, r0.zzzz, r2.xyzw
                mul r2.xyzw, r2.xyzw, l(0.900000, 0.900000, 0.900000, 0.900000)
                add r1.xyzw, r1.xyzw, r2.xyzw
                
                #line 155
                iadd r0.y, r0.y, l(1)
                
                #line 145
                iadd r0.z, r0.x, vThreadIDInGroup.y
                itof r0.z, r0.z  // r0.z <- o
                
                #line 146
                iadd r0.x, r0.x, vThreadIDInGroup.y
                iadd r0.x, r0.y, r0.x  // r0.x <- k
                
                #line 149
                ftou r0.y, r0.z
                ld_structured r0.y, r0.y, l(0), g0.xxxx
                mul r0.y, r0.y, l(0.299000)
                ftou r0.w, r0.z
                ld_structured r0.w, r0.w, l(4), g0.xxxx
                mul r0.w, r0.w, l(0.587000)
                add r0.y, r0.w, r0.y
                ftou r0.z, r0.z
                ld_structured r0.z, r0.z, l(8), g0.xxxx
                mul r0.z, r0.z, l(0.114000)
                add r0.y, r0.z, r0.y  // r0.y <- oGray
                
                #line 150
                ld_structured r0.z, r0.x, l(0), g0.xxxx
                mul r0.z, r0.z, l(0.299000)
                ld_structured r0.w, r0.x, l(4), g0.xxxx
                mul r0.w, r0.w, l(0.587000)
                add r0.z, r0.w, r0.z
                ld_structured r0.w, r0.x, l(8), g0.xxxx
                mul r0.w, r0.w, l(0.114000)
                add r0.z, r0.w, r0.z  // r0.z <- kGray
                
                #line 154
                div r0.y, r0.z, r0.y
                mul r0.y, r0.y, cb0[10].x
                ld_structured r2.x, r0.x, l(0), g0.xxxx
                ld_structured r2.y, r0.x, l(4), g0.xxxx
                ld_structured r2.z, r0.x, l(8), g0.xxxx
                ld_structured r2.w, r0.x, l(12), g0.xxxx
                mul r0.xyzw, r0.yyyy, r2.xyzw
                mul r0.xyzw, r0.xyzw, l(0.900000, 0.900000, 0.900000, 0.900000)
                add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- blurColor.x; r0.y <- blurColor.y; r0.z <- blurColor.z; r0.w <- blurColor.w
                
                #line 159
                mov r1.xyzw, vThreadID.xyyy
                store_uav_typed u0.xyzw, r1.xyzw, r0.xyzw
                
                #line 170
                ret 
                // Approximately 410 instruction slots used
                            
            };
        }

    }

}

